heat_template_version: 2015-04-30

description: Template to deploy a single kubernetes slave instance

parameters:
  key_name:
    type: string
    label: Key Name
    default: KeyPair-test-YM
    description: Name of key-pair to be used for compute instance
  image_name:
    type: string
    label: Image ID
    default: Standard_CentOS_7.3_latest
    description: Image to be used for compute instance
  k8s_slave_flavor_name:
    type: string
    label: Instance Type
    default: s1.xlarge
    description: Type of instance (flavor) to be used
  private_net_name:
    type: string
    default: 02178dcd-acc0-4c28-b21d-70bd963c4db0
    description: Network ID to use for the instance.
  admin_password:
    type: string
    default: e54@Cw5!
    description: password of the root.
  k8s_slave_name:
    type: string
    default: k8s-slave
    description: Name of the Instance.
  k8s_slave_volume_size:
    type: number
    default: 100
    description: Size of the Volume.
  k8s_slave_volume_name:
    type: string
    default: k8s-slave
    description: Name of the Volume.
  common_secgroup:
    type: string
    default: common-secgroup
    description: Name of the Common Security Group.
  k8ss_secgroup: 
    type: string
    default: k8ss-secgroup
    description: Name of the K8S Slaves Security Group.
    
resources:
  k8s_slave_instance:
    type: OS::Nova::Server
    properties:
      name: { get_param: k8s_slave_name }
      key_name: { get_param: key_name }
      admin_pass: { get_param: admin_password }
      image: { get_param: image_name }
      flavor: { get_param: k8s_slave_flavor_name }
      security_groups:
      - { get_param: common_secgroup }
      - { get_param: k8ss_secgroup }
      networks:
      - network: { get_param: private_net_name }

  k8s_slave_volume:
    type: OS::Cinder::Volume
    properties:
      name: { get_param: k8s_slave_volume_name }
      size: { get_param: k8s_slave_volume_size }

  k8s_slave_volume_attachment:
    type: OS::Cinder::VolumeAttachment
    properties:
      volume_id: { get_resource: k8s_slave_volume }
      instance_uuid: { get_resource: k8s_slave_instance }

outputs:
  k8ss_instance_info:
    description: The hostname and the IP address of the deployed instance
    value: 
    - { get_attr: [ k8s_slave_instance, name ] }
    - { get_attr: [ k8s_slave_instance, first_address ] }
